digraph "sf::NonCopyable"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="sf::NonCopyable",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Utility class that makes any derived class non-copyable."];
  Node1 -> Node2 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node2 [label="sf::Context",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_context.html",tooltip="Class holding a valid drawing context."];
  Node1 -> Node3 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node3 [label="sf::Cursor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_cursor.html",tooltip="Cursor defines the appearance of a system cursor."];
  Node1 -> Node4 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node4 [label="sf::FileInputStream",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_file_input_stream.html",tooltip="Implementation of input stream based on a file."];
  Node1 -> Node5 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node5 [label="sf::Ftp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_ftp.html",tooltip="A FTP client."];
  Node1 -> Node6 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node6 [label="sf::GlResource::Transient\lContextLock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_gl_resource_1_1_transient_context_lock.html",tooltip="RAII helper class to temporarily lock an available context for use."];
  Node1 -> Node7 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node7 [label="sf::Http",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_http.html",tooltip="A HTTP client."];
  Node1 -> Node8 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node8 [label="sf::InputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_input_sound_file.html",tooltip="Provide read access to sound files."];
  Node1 -> Node9 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node9 [label="sf::Lock",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_lock.html",tooltip="Automatic wrapper for locking and unlocking mutexes."];
  Node1 -> Node10 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node10 [label="sf::Mutex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_mutex.html",tooltip="Blocks concurrent access to shared resources from multiple threads."];
  Node1 -> Node11 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node11 [label="sf::OutputSoundFile",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_output_sound_file.html",tooltip="Provide write access to sound files."];
  Node1 -> Node12 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node12 [label="sf::RenderTarget",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_render_target.html",tooltip="Base class for all render targets (window, texture, ...)"];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node13 [label="sf::RenderTexture",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_render_texture.html",tooltip="Target for off-screen 2D rendering into a texture."];
  Node12 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node14 [label="sf::RenderWindow",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_render_window.html",tooltip="Window that can serve as a target for 2D drawing."];
  Node1 -> Node15 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node15 [label="sf::Shader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_shader.html",tooltip="Shader class (vertex, geometry and fragment)"];
  Node1 -> Node16 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node16 [label="sf::Socket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_socket.html",tooltip="Base class for all the socket types."];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node17 [label="sf::TcpListener",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_tcp_listener.html",tooltip="Socket that listens to new TCP connections."];
  Node16 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node18 [label="sf::TcpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_tcp_socket.html",tooltip="Specialized socket using the TCP protocol."];
  Node16 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node19 [label="sf::UdpSocket",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_udp_socket.html",tooltip="Specialized socket using the UDP protocol."];
  Node1 -> Node20 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node20 [label="sf::Thread",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_thread.html",tooltip="Utility class to manipulate threads."];
  Node1 -> Node21 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node21 [label="sf::ThreadLocal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_thread_local.html",tooltip="Defines variables with thread-local storage."];
  Node21 -> Node22 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node22 [label="sf::ThreadLocalPtr\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_thread_local_ptr.html",tooltip="Pointer to a thread-local variable."];
  Node1 -> Node23 [dir="back",color="firebrick4",fontsize="10",style="solid"];
  Node23 [label="sf::Window",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsf_1_1_window.html",tooltip="Window that serves as a target for OpenGL rendering."];
  Node23 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid"];
}
